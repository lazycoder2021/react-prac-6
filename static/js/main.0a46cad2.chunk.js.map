{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFireStore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","console","log","includes","useFireStore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","useFirestore","map","key","onClick","layout","whileHover","opacity","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a46cad2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCjkk9VkKMYf1KWosYij67IrU9Gb0hi830\",\n    authDomain: \"fire-gram-d42aa.firebaseapp.com\",\n    projectId: \"fire-gram-d42aa\",\n    storageBucket: \"fire-gram-d42aa.appspot.com\",\n    messagingSenderId: \"236964761789\",\n    appId: \"1:236964761789:web:1718faf26ebef709a427d4\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp; \n\n\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'; \r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0); \r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null); \r\n\r\n    useEffect(() => {\r\n        // storage ref\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images'); \r\n\r\n\r\n        storageRef.put(file).on('state-changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n                const url = await storageRef.getDownloadURL();\r\n                const createdAt = timestamp();\r\n                collectionRef.add({ url: url, createdAt: createdAt }); \r\n                setUrl(url);\r\n        })\r\n    }, [file]); \r\n\r\n    return { progress, url, error }\r\n}\r\n\r\nexport default useStorage; \r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage'; \r\nimport { motion } from 'framer-motion'; \r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n\r\n    const { progress, url } = useStorage(file); \r\n    // console.log(progress, url); \r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null); \r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\" initial={{ width: 0 }} animate={{ width: progress + '%' }}></motion.div>\r\n    ); \r\n}\r\n\r\nexport default ProgressBar; \r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { useState }  from 'react'; \r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null); \r\n\r\n    const types = ['image/png', 'image/jpeg']; \r\n\r\n    const changeHandler = (e) => {\r\n        //console.log('changed'); \r\n        let selected = e.target.files[0]; \r\n        console.log(selected); \r\n\r\n        if (selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError(''); \r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (png or jpeg)'); \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>+</span>\r\n             </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}\r\n                {file && <div> {file.name}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n         </form>\r\n        \r\n     )\r\n\r\n\r\n}\r\n\r\nexport default UploadForm; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config'; \r\n\r\nconst useFireStore = (collection) => {\r\n    const [docs, setDocs] = useState([]); \r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({ ...doc.data(), id: doc.id })\r\n                });\r\n                setDocs(documents)\r\n            }); \r\n\r\n        return () => unsub(); \r\n\r\n    }, [collection])\r\n\r\n    return { docs }; \r\n}\r\n\r\nexport default useFireStore; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFireStore'; \r\nimport { motion } from 'framer-motion'; \r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } = useFirestore('images'); \r\n    console.log(docs); \r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id} onClick={() => setSelectedImg(doc.url)} layout whileHover={{ opacity:1 }}>\r\n                    <motion.img src={doc.url} alt=\"uploaded pic\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay:1 }}/>\r\n                </motion.div>\r\n             ))}\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default ImageGrid; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\nimport { motion } from 'framer-motion'; \r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick} initial={{ opacity: 0 }} animate={{ opacity:1 }}>\r\n            <motion.img src={selectedImg} alt=\"englarged pic\" initial={{ y: \"-100vh\" }} animate={{ y:0 }} />\r\n        </motion.div>\r\n     )\r\n}\r\n\r\nexport default Modal; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\r\nimport ImageGrid from './comps/ImageGrid';\r\nimport Modal from './comps/Modal';\r\n\nfunction App() {\n    const [selectedImg, setSelectedImg] = useState(null); \n\n\n  return (\n    <div className=\"App\">\n          <Title />\n          <UploadForm />\n          <ImageGrid setSelectedImg={setSelectedImg} />\n          {selectedImg && < Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}